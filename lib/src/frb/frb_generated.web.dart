// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'dart:async';
import 'dart:convert';
import 'frb_apis/event_stream.dart';
import 'frb_apis/execution_api.dart';
import 'frb_dto/frb_engine_event.dart';
import 'frb_dto/frb_event_envelope.dart';
import 'frb_dto/frb_execution.dart';
import 'frb_generated.dart';
import 'init.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class StepflowApiApiImplPlatform extends BaseApiImpl<StepflowApiWire> {
  StepflowApiApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  RustStreamSink<FrbEventEnvelope> dco_decode_StreamSink_frb_event_envelope_Sse(
      dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  FrbExecStart dco_decode_box_autoadd_frb_exec_start(dynamic raw);

  @protected
  FrbExecUpdate dco_decode_box_autoadd_frb_exec_update(dynamic raw);

  @protected
  FrbPage dco_decode_box_autoadd_frb_page(dynamic raw);

  @protected
  FrbStatusPage dco_decode_box_autoadd_frb_status_page(dynamic raw);

  @protected
  PlatformInt64 dco_decode_box_autoadd_i_64(dynamic raw);

  @protected
  BigInt dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  FrbEngineEvent dco_decode_frb_engine_event(dynamic raw);

  @protected
  FrbEventEnvelope dco_decode_frb_event_envelope(dynamic raw);

  @protected
  FrbExecDto dco_decode_frb_exec_dto(dynamic raw);

  @protected
  FrbExecStart dco_decode_frb_exec_start(dynamic raw);

  @protected
  FrbExecUpdate dco_decode_frb_exec_update(dynamic raw);

  @protected
  FrbPage dco_decode_frb_page(dynamic raw);

  @protected
  FrbStatusPage dco_decode_frb_status_page(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<FrbExecDto> dco_decode_list_frb_exec_dto(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  PlatformInt64? dco_decode_opt_box_autoadd_i_64(dynamic raw);

  @protected
  BigInt? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  RustStreamSink<FrbEventEnvelope> sse_decode_StreamSink_frb_event_envelope_Sse(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  FrbExecStart sse_decode_box_autoadd_frb_exec_start(
      SseDeserializer deserializer);

  @protected
  FrbExecUpdate sse_decode_box_autoadd_frb_exec_update(
      SseDeserializer deserializer);

  @protected
  FrbPage sse_decode_box_autoadd_frb_page(SseDeserializer deserializer);

  @protected
  FrbStatusPage sse_decode_box_autoadd_frb_status_page(
      SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  FrbEngineEvent sse_decode_frb_engine_event(SseDeserializer deserializer);

  @protected
  FrbEventEnvelope sse_decode_frb_event_envelope(SseDeserializer deserializer);

  @protected
  FrbExecDto sse_decode_frb_exec_dto(SseDeserializer deserializer);

  @protected
  FrbExecStart sse_decode_frb_exec_start(SseDeserializer deserializer);

  @protected
  FrbExecUpdate sse_decode_frb_exec_update(SseDeserializer deserializer);

  @protected
  FrbPage sse_decode_frb_page(SseDeserializer deserializer);

  @protected
  FrbStatusPage sse_decode_frb_status_page(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<FrbExecDto> sse_decode_list_frb_exec_dto(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  PlatformInt64? sse_decode_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  BigInt? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_frb_event_envelope_Sse(
      RustStreamSink<FrbEventEnvelope> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_frb_exec_start(
      FrbExecStart self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_frb_exec_update(
      FrbExecUpdate self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_frb_page(FrbPage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_frb_status_page(
      FrbStatusPage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_64(
      PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_frb_engine_event(
      FrbEngineEvent self, SseSerializer serializer);

  @protected
  void sse_encode_frb_event_envelope(
      FrbEventEnvelope self, SseSerializer serializer);

  @protected
  void sse_encode_frb_exec_dto(FrbExecDto self, SseSerializer serializer);

  @protected
  void sse_encode_frb_exec_start(FrbExecStart self, SseSerializer serializer);

  @protected
  void sse_encode_frb_exec_update(FrbExecUpdate self, SseSerializer serializer);

  @protected
  void sse_encode_frb_page(FrbPage self, SseSerializer serializer);

  @protected
  void sse_encode_frb_status_page(FrbStatusPage self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_frb_exec_dto(
      List<FrbExecDto> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_64(
      PlatformInt64? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(BigInt? self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

class StepflowApiWire implements BaseWire {
  StepflowApiWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external StepflowApiWasmModule get wasmModule;

@JS()
@anonymous
extension type StepflowApiWasmModule._(JSObject _) implements JSObject {}
