// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `clone`, `clone`, `clone`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`

class FrbExecUpdateRequest {
  final String status;
  final String? resultJson;

  const FrbExecUpdateRequest({
    required this.status,
    this.resultJson,
  });

  @override
  int get hashCode => status.hashCode ^ resultJson.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FrbExecUpdateRequest &&
          runtimeType == other.runtimeType &&
          status == other.status &&
          resultJson == other.resultJson;
}

class FrbExecutionResult {
  final String runId;
  final String mode;
  final String status;
  final String? resultJson;
  final String startedAt;
  final String? finishedAt;

  const FrbExecutionResult({
    required this.runId,
    required this.mode,
    required this.status,
    this.resultJson,
    required this.startedAt,
    this.finishedAt,
  });

  @override
  int get hashCode =>
      runId.hashCode ^
      mode.hashCode ^
      status.hashCode ^
      resultJson.hashCode ^
      startedAt.hashCode ^
      finishedAt.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FrbExecutionResult &&
          runtimeType == other.runtimeType &&
          runId == other.runId &&
          mode == other.mode &&
          status == other.status &&
          resultJson == other.resultJson &&
          startedAt == other.startedAt &&
          finishedAt == other.finishedAt;
}

class FrbListByStatusRequest {
  final String status;
  final PlatformInt64? limit;
  final PlatformInt64? offset;

  const FrbListByStatusRequest({
    required this.status,
    this.limit,
    this.offset,
  });

  @override
  int get hashCode => status.hashCode ^ limit.hashCode ^ offset.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FrbListByStatusRequest &&
          runtimeType == other.runtimeType &&
          status == other.status &&
          limit == other.limit &&
          offset == other.offset;
}

class FrbListRequest {
  final PlatformInt64? limit;
  final PlatformInt64? offset;

  const FrbListRequest({
    this.limit,
    this.offset,
  });

  @override
  int get hashCode => limit.hashCode ^ offset.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FrbListRequest &&
          runtimeType == other.runtimeType &&
          limit == other.limit &&
          offset == other.offset;
}

class FrbStartExecutionRequest {
  final String mode;
  final String? templateId;
  final String? dslJson;
  final String? initCtxJson;

  const FrbStartExecutionRequest({
    required this.mode,
    this.templateId,
    this.dslJson,
    this.initCtxJson,
  });

  @override
  int get hashCode =>
      mode.hashCode ^
      templateId.hashCode ^
      dslJson.hashCode ^
      initCtxJson.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FrbStartExecutionRequest &&
          runtimeType == other.runtimeType &&
          mode == other.mode &&
          templateId == other.templateId &&
          dslJson == other.dslJson &&
          initCtxJson == other.initCtxJson;
}
