// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'frb_engine_event.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`, `from`

@freezed
sealed class FrbEngineEvent with _$FrbEngineEvent {
  const FrbEngineEvent._();

  const factory FrbEngineEvent.workflowStarted({
    required String runId,
  }) = FrbEngineEvent_WorkflowStarted;
  const factory FrbEngineEvent.workflowFinished({
    required String runId,
    required String result,
  }) = FrbEngineEvent_WorkflowFinished;
  const factory FrbEngineEvent.nodeEnter({
    required String runId,
    required String stateName,
    required String input,
  }) = FrbEngineEvent_NodeEnter;
  const factory FrbEngineEvent.nodeSuccess({
    required String runId,
    required String stateName,
    required String output,
  }) = FrbEngineEvent_NodeSuccess;
  const factory FrbEngineEvent.nodeFailed({
    required String runId,
    required String stateName,
    required String error,
  }) = FrbEngineEvent_NodeFailed;
  const factory FrbEngineEvent.nodeCancelled({
    required String runId,
    required String stateName,
    required String reason,
  }) = FrbEngineEvent_NodeCancelled;
  const factory FrbEngineEvent.nodeExit({
    required String runId,
    required String stateName,
    required String status,
    BigInt? durationMs,
  }) = FrbEngineEvent_NodeExit;
  const factory FrbEngineEvent.nodeDispatched({
    required String runId,
    required String stateName,
    required String context,
  }) = FrbEngineEvent_NodeDispatched;
  const factory FrbEngineEvent.timerScheduled({
    required String runId,
    required String stateName,
    required String timestamp,
  }) = FrbEngineEvent_TimerScheduled;
  const factory FrbEngineEvent.timerFired({
    required String runId,
    required String stateName,
  }) = FrbEngineEvent_TimerFired;
  const factory FrbEngineEvent.taskReady({
    required String runId,
    required String stateName,
    required String resource,
    String? input,
  }) = FrbEngineEvent_TaskReady;
  const factory FrbEngineEvent.taskFinished({
    required String runId,
    required String stateName,
    required String output,
  }) = FrbEngineEvent_TaskFinished;
  const factory FrbEngineEvent.subflowReady({
    required String runId,
    required String parentRunId,
    required String stateName,
    required String dsl,
    required String initCtx,
  }) = FrbEngineEvent_SubflowReady;
  const factory FrbEngineEvent.subflowFinished({
    required String parentRunId,
    required String childRunId,
    required String stateName,
    required String result,
  }) = FrbEngineEvent_SubflowFinished;
  const factory FrbEngineEvent.subflowFailed({
    required String parentRunId,
    required String childRunId,
    required String stateName,
    required String error,
  }) = FrbEngineEvent_SubflowFailed;
  const factory FrbEngineEvent.uiEventPushed({
    required String runId,
    required String uiEvent,
  }) = FrbEngineEvent_UiEventPushed;
}
