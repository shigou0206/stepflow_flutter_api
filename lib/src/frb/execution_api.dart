// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'execution_types.dart';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<FrbExecutionResult> startExecution(
        {required ExecutionSqlxSvc svc,
        required FrbStartExecutionRequest req}) =>
    StepflowApi.instance.api
        .crateExecutionApiStartExecution(svc: svc, req: req);

Future<FrbExecutionResult> getExecution(
        {required ExecutionSqlxSvc svc, required String runId}) =>
    StepflowApi.instance.api
        .crateExecutionApiGetExecution(svc: svc, runId: runId);

Future<List<FrbExecutionResult>> listExecutions(
        {required ExecutionSqlxSvc svc, required FrbListRequest req}) =>
    StepflowApi.instance.api
        .crateExecutionApiListExecutions(svc: svc, req: req);

Future<void> updateExecution(
        {required ExecutionSqlxSvc svc,
        required String runId,
        required FrbExecUpdateRequest req}) =>
    StepflowApi.instance.api
        .crateExecutionApiUpdateExecution(svc: svc, runId: runId, req: req);

Future<void> deleteExecution(
        {required ExecutionSqlxSvc svc, required String runId}) =>
    StepflowApi.instance.api
        .crateExecutionApiDeleteExecution(svc: svc, runId: runId);

Future<List<FrbExecutionResult>> listExecutionsByStatus(
        {required ExecutionSqlxSvc svc, required FrbListByStatusRequest req}) =>
    StepflowApi.instance.api
        .crateExecutionApiListExecutionsByStatus(svc: svc, req: req);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ExecutionSqlxSvc>>
abstract class ExecutionSqlxSvc implements RustOpaqueInterface {}
